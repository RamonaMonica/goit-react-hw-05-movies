{"version":3,"file":"static/js/247.faf3b8cb.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader.jsx","components/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../api';\nimport Loader from 'components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const actors = await api.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px',\n          justifyContent: 'center',\n        }}\n      >\n        {actors.map(actor => (\n          <li\n            key={actor.id}\n            style={{\n              listStyleType: 'none',\n              textAlign: 'center',\n              color: 'pink',\n              width: '200px',\n            }}\n          >\n            <img\n              style={{ width: '100%', marginBottom: '10px' }}\n              src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              alt={actor.original_name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return <Oval height=\"100\" width=\"100\" color=\"pink\" ariaLabel=\"loading\" />;\n};\n\nexport default Loader;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8f04084cca4c2de81d506d99067585d6';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","onActorsOfMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_actors","_context","prev","next","api","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","style","display","flexWrap","gap","justifyContent","map","actor","listStyleType","textAlign","color","width","marginBottom","src","profile_path","alt","original_name","name","character","id","Oval","height","ariaLabel","axios","API_KEY","fetchTrending","response","concat","abrupt","data","results","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetalis","_ref3","_callee3","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}